apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

ext {
    supportLibVersion = "27.1.1"
    firebaseUiVersion = "3.3.1"
    archLifecycleVersion = "1.1.1"
    daggerVersion = "2.13"
    butterknifeVersion = "8.8.1"
    kotlin_version = '1.2.41'
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.prembros.blabla"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

//    Firebase
    implementation 'com.google.firebase:firebase-database:15.0.1'
    implementation 'com.google.firebase:firebase-auth:15.1.0'
    implementation 'com.google.firebase:firebase-storage:15.0.2'
    implementation 'com.google.firebase:firebase-messaging:15.0.2'
    implementation "com.firebaseui:firebase-ui-database:$firebaseUiVersion"
    implementation "com.firebaseui:firebase-ui-auth:$firebaseUiVersion"

//    Support libraries
    implementation "com.android.support:support-v4:$supportLibVersion"
    implementation "com.android.support:support-v13:$supportLibVersion"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'

//    Glide
    implementation 'com.github.bumptech.glide:glide:4.4.0'
    implementation 'jp.wasabeef:glide-transformations:3.0.1'

//    ButterKnife
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

//   ViewModel and LiveData
//    implementation "android.arch.lifecycle:extensions:${archLifecycleVersion}"
//    implementation "android.arch.lifecycle:runtime:${archLifecycleVersion}"
//    annotationProcessor "android.arch.lifecycle:compiler:${archLifecycleVersion}"

//   Dagger
    implementation "com.google.dagger:dagger:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
//    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"

//    EasyPermission
    implementation 'pub.devrel:easypermissions:0.3.1'

//    implementation 'com.jaeger.statusbarutil:library:1.5.1'
//    implementation 'com.github.castorflex.smoothprogressbar:library-circular:1.3.0'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.0'
    implementation 'id.zelory:compressor:2.1.0'
    implementation 'com.google.code.gson:gson:2.8.3'
    implementation 'com.alexvasilkov:gesture-views:2.5.1'
//    implementation 'org.apache.commons:commons-collections4:4.1'
    implementation 'commons-lang:commons-lang:2.6'
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$supportLibVersion"
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
